<%
locals.OLSKPageTitle = OLSKLocalized('WKCNotesTitle');
locals.OLSKPageAssets = [
	'ui-style.css',
	'ui-logic.js',
	'ui-interaction.js',
];
%>

<%- include('../../_shared/WKCLayout/header.ejs') %>

<script type="text/javascript">
	var sharedData = {
		WKCAppNotesSharedSelectedItem: {},
	};

	d3.json('<%= OLSKCanonicalFor('WKCRouteAPIToken') %>', {
		method: 'GET',
	}).then(function(responseJSON) {
		if (!responseJSON.WKCAPIToken) {
			window.alert('<%= OLSKLocalized('WKCNotesErrors').WKCAppErrorTokenUnavailable %>');
			throw new Error('WKCAppErrorTokenUnavailable');
		}

		sharedData.WKCAppNotesSharedAPIToken = responseJSON.WKCAPIToken;

		d3.json('<%= OLSKCanonicalFor('WKCRouteAPINotesSearch') %>', {
			method: 'GET',
			headers: {
				'x-client-key': sharedData.WKCAppNotesSharedAPIToken,
			},
		}).then(function(responseJSON) {
			if (!Array.isArray(responseJSON)) {
				window.alert('<%= OLSKLocalized('WKCNotesErrors').WKCAppErrorEntriesUnavailable %>');
				throw new Error('WKCAppErrorEntriesUnavailable');
			}

			d3.select('#WKCAppNotes').classed('WKCAppNotesLoading', false);
			WKCNotesAppInteraction.WKCNotesAppPerformDataJoinWithItemsArrayAndSharedData(responseJSON.map(function(e) {
				return Object.assign(e, {
					WKCNoteDateCreated: new Date(e.WKCNoteDateCreated),
					WKCNoteDateUpdated: new Date(e.WKCNoteDateUpdated),
				});
			}).sort(WKCNotesApp.WKCNotesAppListSort), sharedData);

			WKCNotesAppInteraction.WKCNotesAppSetSelectedItemWithSharedData(d3.selectAll('.WKCAppNotesListItem').data()[0], sharedData);
		});
	});
</script>

<div id="WKCAppNotes" class="WKCAppNotesLoading">
	<header id="WKCAppNotesToolbar">
		<span id="WKCAppNotesPersistenceStatus"></span>

		<button id="WKCAppNotesAddButton" accesskey="n"><%= OLSKLocalized('WKCAppNotesAddButtonText') %></button>
		<script type="text/javascript">
			d3.select('#WKCAppNotesAddButton').on('click', function() {
				WKCNotesAppInteraction.WKCNotesAppPerformDataJoinWithItemsArrayAndSharedData(d3.selectAll('.WKCAppNotesListItem').data().concat(sharedData.WKCAppNotesSharedSelectedItem).sort(WKCNotesApp.WKCNotesAppListSort), sharedData);

				WKCNotesAppInteraction.WKCNotesAppSetSelectedItemWithSharedData({
					WKCNoteDateCreated: new Date(),
					WKCNoteBody: '',
				}, sharedData);
			});
		</script>
	</header>

	<div id="WKCAppNotesMain">
		<div id="WKCAppNotesList">
		</div>

		<div id="WKCAppNotesEditor">
			<textarea id="WKCNotesAppEditorTextarea"></textarea>
			<script type="text/javascript">
				sharedData.WKCAppNotesSharedPersistenceTask = {
					OLSKTaskName: 'WKCTasksEditorPersistence',
					OLSKTaskFireTimeInterval: 3,
					OLSKTaskShouldBePerformed: function() {
						return true;
					},
					OLSKTaskFireLimit: 1,
					OLSKTaskCallback: function() {
						d3.select('#WKCAppNotesPersistenceStatus').text('<%= OLSKLocalized('WKCAppNotesPersistenceStatusSaving') %>');

						var rejectCallback = function(error) {
							if (window.confirm('<%= OLSKLocalized('WKCNotesErrors').WKCAppErrorPersistenceDidFail %>')) {
								sharedData.WKCAppNotesSharedPersistenceTask.OLSKTaskCallback();
							};

							d3.select('#WKCAppNotesPersistenceStatus').text('<%= OLSKLocalized('WKCAppNotesPersistenceStatusUnableToSave') %>');

							throw error;
						};

						if (!sharedData.WKCAppNotesSharedSelectedItem.WKCNoteID) {
							return d3.json('<%= OLSKCanonicalFor('WKCRouteAPINotesCreate') %>', {
								method: 'POST',
								headers: {
									'Content-Type': 'application/json',
									'x-client-key': sharedData.WKCAppNotesSharedAPIToken,
								},
								body: JSON.stringify(sharedData.WKCAppNotesSharedSelectedItem),
							}).then(function(responseJSON) {
								d3.select('#WKCAppNotesPersistenceStatus').text('<%= OLSKLocalized('WKCAppNotesPersistenceStatusSaved') %>');

								Object.assign(sharedData.WKCAppNotesSharedSelectedItem, responseJSON);

								setTimeout(function() {
									d3.select('#WKCAppNotesPersistenceStatus').text('');
								}, 1000);
							}, rejectCallback);
						}

						return d3.json((<%- OLSKCanonicalSubstitutionFunctionFor('WKCRouteAPINotesUpdate') %>)({
							wkc_note_id: sharedData.WKCAppNotesSharedSelectedItem.WKCNoteID,
						}), {
							method: 'PUT',
							headers: {
								'Content-Type': 'application/json',
								'x-client-key': sharedData.WKCAppNotesSharedAPIToken,
							},
							body: JSON.stringify(sharedData.WKCAppNotesSharedSelectedItem),
						}).then(function(responseJSON) {
							console.log(responseJSON);
							d3.select('#WKCAppNotesPersistenceStatus').text('<%= OLSKLocalized('WKCAppNotesPersistenceStatusSaved') %>');

							setTimeout(function() {
								d3.select('#WKCAppNotesPersistenceStatus').text('');
							}, 1000);
						}, rejectCallback);
					},
				};

				d3.select('#WKCNotesAppEditorTextarea').on('input', function() {
					clearInterval(sharedData.WKCAppNotesSharedPersistenceTask._OLSKTaskTimerID);
					OLSKTasks.OLSKTasksTimeoutForTaskObject(sharedData.WKCAppNotesSharedPersistenceTask);

					Object.assign(sharedData.WKCAppNotesSharedSelectedItem, {
						WKCNoteBody: this.value,
						WKCNoteDateUpdated: new Date(),
					});

					WKCNotesAppInteraction.WKCNotesAppPerformDataJoinWithItemsArrayAndSharedData(d3.selectAll('.WKCAppNotesListItem').data(), sharedData);
				});
			</script>
		</div>
	</div>

	<footer id="WKCAppNotesFooter">
		<a href="<%= OLSKCanonicalFor('WKCRouteLoginDestroy') %>"><%= OLSKLocalized('WKCLoginDestroyTitle') %></a>
	</footer>
</div>

<%- include('../../_shared/WKCLayout/footer.ejs') %>